{"version":3,"sources":["components/TodoItem.js","components/Todos.js","components/Layout/Header.js","components/AddNewTodo.js","components/pages/About.js","App.js","index.js"],"names":["TodoItem","getStyle","textDecoration","_this","props","task","completed","_this$props$task","this","id","title","react_default","a","createElement","style","type","onChange","toggleComplete","bind","checked","onClick","delTask","Component","Todos","map","components_TodoItem","key","Header","Link","to","AddNewTodo","state","onSubmit","event","preventDefault","addTask","setState","handleChange","_event$target","target","name","value","Object","defineProperty","placeholder","About","Fragment","App","localStorage","setItem","JSON","stringify","toConsumableArray","filter","todo","newTask","uuid","v4","concat","getItem","parse","_this2","BrowserRouter","basename","window","location","pathname","console","log","Layout_Header","Route","exact","path","render","components_AddNewTodo","keys","length","components_Todos","component","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.f32e3d57.chunk.js","sourcesContent":["import React, {Component} from 'react'\n\nclass TodoItem extends Component{\n    getStyle = () => {\n        return {\n            textDecoration: this.props.task.completed ? 'line-through' : 'none'\n        }\n    }\n\n    render(){\n        const {id,title} = this.props.task; // destructuring, pulling the variables out\n        return (\n            <div style={this.getStyle()}>\n                <input type=\"checkbox\" onChange={this.props.toggleComplete.bind(this, id)} checked={this.props.task.completed}/>\n                {title}\n                <button onClick={this.props.delTask.bind(this, id)}>X</button>\n            </div>\n        )\n    }\n}\n\nexport default TodoItem","import React, {Component} from 'react'\nimport TodoItem from './TodoItem'\n\nclass Todos extends Component{\n    render(){\n        return this.props.task.map((task) => (\n            <TodoItem\n                key={task.id}\n                task={task}\n                toggleComplete={this.props.toggleComplete}\n                delTask={this.props.delTask}\n            />\n        ));\n    }\n}\n\nexport default Todos","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nfunction Header(){\n    return (\n        <header>\n            <h1>TODO LIST</h1>\n            <Link to=\"/\">Home</Link> |\n            <Link to=\"/about\">About</Link>\n        </header>\n    )\n}\n\nexport default Header","import React, {Component} from 'react'\n\nclass AddNewTodo extends Component{\n    state={\n        title:\"\"\n    }\n\n    onSubmit = (event) =>{\n        event.preventDefault();\n        this.props.addTask(this.state.title);\n        this.setState({\n            title:\"\"\n        })\n    }\n\n    handleChange = (event) =>{\n        const {name,value} = event.target\n        this.setState({\n            [name] : value\n        })\n    }\n\n    render(){\n        return (\n            <form onSubmit={this.onSubmit}>\n                <input\n                    type=\"text\"\n                    name=\"title\"\n                    placeholder=\"Add a Todo ...\"\n                    value={this.state.title}\n                    onChange={this.handleChange}\n                />\n                <input\n                    type=\"submit\"\n                    name=\"submit\"\n                />\n            </form>\n        )\n    }\n}\n\nexport default AddNewTodo","import React from 'react'\n\nfunction About(){\n    return(\n        <React.Fragment>\n            <h1>About</h1>\n            <p>TODO List app</p>\n        </React.Fragment>\n    )\n}\n\nexport default About","import React, {Component} from 'react'\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\n\nimport Todos from './components/Todos'\nimport './App.css'\nimport Header from './components/Layout/Header'\nimport AddNewTodo from './components/AddNewTodo'\nimport uuid from 'uuid'\n\nimport About from './components/pages/About'\n\nclass App extends Component{\n    state={\n            task: []\n    }\n\n    // GET DATA FROM BROWSER\n    componentDidMount() {\n        const cachedList = localStorage.getItem(\"list\")\n        if(cachedList){\n            this.setState({\n                task: JSON.parse(localStorage.getItem(\"list\"))\n            })\n        }\n    }\n\n    // TOGGLE TASK COMPLETE\n    toggleComplete = (id) =>{\n        this.setState({\n            task: this.state.task.map(task => {\n                if(task.id === id){\n                    task.completed = !task.completed\n                }\n                return task\n            })\n        },()=>{\n            localStorage.setItem(\"list\", JSON.stringify(this.state.task)) // because local storage can only store strings\n        })\n    }\n\n    // DELETE TASK\n    delTask = (id) =>{\n        this.setState({\n            task:[...this.state.task.filter(todo => todo.id !== id)]\n        },()=>{\n            localStorage.setItem(\"list\", JSON.stringify(this.state.task)) // because local storage can only store strings\n        })\n    }\n\n    // ADD TASK\n    addTask = (title) =>{\n        const newTask = {\n            id: uuid.v4(),\n            title, // this is equal to title: title\n            completed: false\n        }\n        this.setState({\n            task: [...this.state.task, newTask]\n        }, () => {\n            localStorage.setItem(\"list\", JSON.stringify(this.state.task)) // because local storage can only store strings\n        })\n    }\n\n    render() {\n        return(\n            <Router basename={window.location.pathname}>\n                <div>\n                    {console.log(window.location.pathname)}\n                    <Header />\n                    <Route exact path=\"/\" render={ props => ( // single route will load both of these components\n                        <React.Fragment>\n                            <AddNewTodo addTask={this.addTask}/>\n                            { Object.keys(this.state.task).length === 0 ? <div>Enter new Task</div> :\n                                <Todos\n                                    task={this.state.task}\n                                    toggleComplete={this.toggleComplete}\n                                    delTask={this.delTask}\n                                />\n                            }\n                        </React.Fragment>\n                    )}/>\n                    <Route path=\"/about\" component={About}/>\n                </div>\n            </Router>\n        )\n    }\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}